#%% none,barebones
a = None
print(a.__class__.__name__, a) #: Optional[int] None
if True: a = 5 # wrap with `if`` to avoid shadowing
print(a.__class__.__name__, a) #: Optional[int] 5

#%% none_unbound,barebones
a = None
print(a.__class__.__name__, a) #: Optional[NoneType] None

#%% bool,barebones
print(True, False) #: True False
a = True
print(a.__class__.__name__, a) #: bool True

#%% int,barebones
i = 15
print(i.__class__.__name__, i) #: int 15
print(0b0000_1111) #: 15
print(0B101) #: 5
print(3) #: 3
print(18_446_744_073_709_551_000) #: -616
print(0b11111111_11111111_11111111_11111111_11111111_11111111_11111111_11111111) #: -1
print(0b11111111_11111111_11111111_11111111_11111111_11111111_11111111_11111111u) #: 18446744073709551615
print(18_446_744_073_709_551_000u) #: 18446744073709551000
print(65i7) #: -63
print(-1u7) #: 127

#%% int_suffix,barebones
@extend
class int:
    def __suffix_test__(s):
        return 'TEST: ' + str(s)
print(123_456test) #: TEST: 123456

#%% int_large,barebones
print(1844674407_3709551999)  #: 383
print(1844674407_3709551999i256)  #: 18446744073709551999

#%% float,barebones
f = 1.11
print(f.__class__.__name__, f) #: float 1.11
print(5.15) #: 5.15
print(2e2) #: 200
print(2.e-2) #: 0.02
print 1_000.0 #: 1000
print 1_000e9 #: 1e+12

#%% float_suffix,barebones
@extend
class float:
    def __suffix_zoo__(x):
        return str(x) + '_zoo'
print(1.2e-1zoo) #: 0.12_zoo

#%% string,barebones
a = 'hi'
print(a.__class__.__name__, a) #: str hi
print('kthxbai', "kthxbai") #: kthxbai kthxbai
print("""hi
hello""", '''hai
hallo''')
#: hi
#: hello hai
#: hallo

#%% fstring,barebones
a, b = 1, 2
print(f"string {a}") #: string 1
print(F"{b} string") #: 2 string
print(f"str {a+b} end") #: str 3 end
print(f"str {a+b=}") #: str a+b=3
c = f'and this is {a} followed by {b}'
print(c, f'{b}{a}', f'. {1+a=} .. {b} ...')
#: and this is 1 followed by 2 21 . 1+a=2 .. 2 ...

#%% fstring_error_1,barebones
f"a{1 + 3}}" #! single '}' is not allowed in f-string

#%% fstring_error_2,barebones
f"a{{1 + 3}" #! expecting '}' in f-string

#%% string_prefix,barebones
@extend
class str:
    def __prefix_pfx__(s: str, N: Static[int]):
        return 'PFX ' + s
print(pfx'HELLO') #: PFX HELLO

@extend
class str:
    def __prefix_pxf__(s: str, N: Static[int]):
        return 'PXF ' + s + " " + str(N)
print(pxf'HELLO') #: PXF HELLO 5

#%% string_raw,barebones
print('a\\b') #: a\b
print(r'a\tb') #: a\tb
print(R'\n\r\t\\') #: \n\r\t\\

#%% string_format
a = 'xyz'
print(f"{a:>10}")
#:        xyz
print(f"{a!r:>10}")
#:      'xyz'
print(f"{a=!r:>10}")
#: a=     'xyz'
print(f"{a=}")
#: a=xyz
print(f"{a=:>10}")
#: a=       xyz
print(f"{a!r}")
#: 'xyz'
print(f'{1000000=:,}')
#: 1000000=1,000,000
