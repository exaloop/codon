#%% pass,barebones
pass

#%% print,barebones
print 1,
print 1, 2  #: 1 1 2

print 1, 2  #: 1 2
print(3, "4", sep="-", end=" !\n") #: 3-4 !

print(1, 2) #: 1 2
print (1, 2) #: (1, 2)

def foo(i, j):
    return i + j
print 3 |> foo(1)  #: 4

#%% typeof_definitions,barebones
a = 10
def foo(a)->type(a): return a
print(foo(5).__class__.__name__)  #: int

b: type(a) = 1
print(b.__class__.__name__) #: int

#%% multi_error,barebones
# TODO in new parser!
# a = 55
# print z  # name 'z' is not defined
# print(a, q, w)  # name 'q' is not defined
# print quit  # name 'quit' is not defined

#%% static_unify,barebones
def foo(x: Callable[[1,2], 3]): pass  #! Callable cannot take static types

#%% static_unify_2,barebones
def foo(x: List[1]): pass  #! expected type expression

#%% expr,barebones
a = 5; b = 3
print a, b  #: 5 3

